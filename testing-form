terraform {
  required_providers {
    aws = {
      source = "hashicorp/aws"
      version = "5.95.0"
    }
  }
}

provider "aws" {
  region = "us-east-1"
  access_key = ""
  secret_key = ""
  token= ""
}

resource "aws_vpc" "lks-vpc" {
    cidr_block = "172.32.0.0/23"
    enable_dns_hostnames = true
    enable_dns_support = true
}

resource "aws_subnet" "lks-public-subnet-1a" {
    cidr_block = "172.32.0.0/24"
    vpc_id = aws_vpc.lks-vpc.id
    availability_zone = "us-east-1a"
  
}

resource "aws_subnet" "lks-private-subnet-1a" {
    cidr_block = "172.32.1.0/25"
    vpc_id = aws_vpc.lks-vpc.id
    availability_zone = "us-east-1a"
  
}

resource "aws_subnet" "lks-private-subnet-1b" {
    cidr_block = "172.32.1.128/25"
    vpc_id = aws_vpc.lks-vpc.id
    availability_zone = "us-east-1b"
}

resource "aws_internet_gateway" "lks-igw" {
    vpc_id = aws_vpc.lks-vpc.id
}

resource "aws_route_table" "lks-public-rtb" {
    vpc_id = aws_vpc.lks-vpc.id  
}

resource "aws_route" "igw-rtb" {
    route_table_id = aws_route_table.lks-public-rtb.id
    destination_cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.lks-igw.id
}

resource "aws_security_group" "lks-elb-sg" {
    description = "for elb"
    vpc_id = aws_vpc.lks-vpc.id
}

resource "aws_vpc_security_group_ingress_rule" "allow-80" {
    security_group_id = aws_security_group.lks-elb-sg.id
    cidr_ipv4 = "0.0.0.0/0"
    from_port = 80
    ip_protocol = "tcp"
    to_port = 80
}

resource "aws_vpc_security_group_egress_rule" "allow-all" {
    security_group_id = aws_security_group.lks-elb-sg.id
    cidr_ipv4 = "0.0.0.0/0"
    ip_protocol = "-1"
}
